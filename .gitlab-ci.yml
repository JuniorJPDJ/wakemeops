workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

variables:
  WAKEMEBOT_IMAGE: "upciti/wakemebot:main"

stages:
  - update
  - build
  - test
  - push
  - publish
  - pages

# Templates
.default:
  image: $WAKEMEBOT_IMAGE
  tags: ["wakemebot"]
  retry: 2

.schedule:
  extends: .default
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

.no_schedule:
  extends: .default
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - changes:
        - ops2deb-*.yml
      when: on_success

.prod_no_schedule:
  extends: .default
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - ops2deb-*.yml
      when: on_success

.parallel_component:
  extends: .default
  parallel:
    matrix:
      - component: devops
      - component: secops
      - component: terminal

.parallel_distro:
  extends: .default
  retry: 1
  parallel:
    matrix:
      - DISTRO: ubuntu
        VERSION: ["16.04", "18.04", "20.04", "21.04", "21.10"]
      - DISTRO: debian
        VERSION:
          ["bookworm-slim", "bullseye-slim", "buster-slim", "stretch-slim"]


# Anchors
.enable_ssh: &enable_ssh
  - eval $(ssh-agent -s)
  - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh || echo
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

.git_configure: &git_configure
  - git config --replace-all user.name $GITLAB_USER_NAME
  - git config --replace-all user.email $GITLAB_USER_EMAIL
  - git config push.default simple

.git_commit_push: &git_commit_push
  - git remote set-url --push origin git@$CI_SERVER_HOST:$CI_PROJECT_PATH.git
  - branch="feature/update-packages-$(date '+%Y%m%d%H%M%S')"
  - git checkout -b ${branch}
  - git add ops2deb-*.yml
  - >
    echo -e "feature(bot): update packages\n" > message.log
  - cat ops2deb-*.log >> message.log || true
  - git commit -m "$(cat message.log)"
  - >
    git push \
      -o merge_request.create \
      -o merge_request.target=${CI_DEFAULT_BRANCH} \
      -o merge_request.merge_when_pipeline_succeeds \
      --set-upstream origin \
      ${branch}

.install_dependencies: &install_dependencies
  - apt-get update
  - apt-get install -y ${APT_DEPENDENCIES}

update_blueprints:
  stage: update
  extends: .schedule
  before_script:
    - *enable_ssh
    - *git_configure
  script:
    - make update
    - git update-index -q --really-refresh
    - if git diff-index HEAD --quiet; then exit 0; fi # exit if no changes
    - *git_commit_push
  variables:
    GIT_STRATEGY: clone
    GITLAB_USER_NAME: "wakemebot"
    GITLAB_USER_EMAIL: "wakemebot@upciti.com"

generate_packages:
  stage: build
  extends:
    - .no_schedule
    - .parallel_component
  script:
    - make generate-${component}
    - make build-${component}
  artifacts:
    paths:
      - build/**/*deb
    expire_in: 2 days

test_packages:
  stage: test
  image: ${DISTRO}:${VERSION}
  extends:
    - .no_schedule
    - .parallel_distro
  before_script:
    - *install_dependencies
    - make install-packages
  script:
    - make check-packages
  variables:
    APT_DEPENDENCIES: "curl gnupg2 ca-certificates make"

push_packages:
  stage: push
  extends:
    - .prod_no_schedule
    - .parallel_component
  script:
    - make push-${component}

publish_s3:
  stage: publish
  extends: .prod_no_schedule
  script:
    - make publish

pages:
  stage: pages
  image: $WAKEMEBOT_IMAGE
  script:
    - make docs
  artifacts:
    paths:
      - public
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
        - docs/**/*
        - mkdocs.yml
  needs: []
